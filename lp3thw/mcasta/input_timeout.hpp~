#include <iostream>
#include <thread>
#include <chrono>
#include <mutex>
#include <condition_variable>
#include <string>

class TimedInput {
    std::condition_variable cv;
    std::string prompt, input_string;
    std::chrono::seconds time_limit;
public:
    TimedInput(std::string prompt_str, std::chrono::seconds time) : prompt{prompt_str}, time_limit{time} { }

    void read_string() {
	std::cin >> input_string;
	cv.notify_one();
    }

    std::string return_input() {
	std::cout << prompt << "\n";
	std::thread th(&TimedInput::read_string, this);

	std::mutex mtx;
	std::unique_lock<std::mutex> lck(mtx);

	while ((cv.wait_for(lck, time_limit) != std::cv_status::timeout) and (input_string.empty())) { }

	th.detach();
	
	return input_string;
    }
};
